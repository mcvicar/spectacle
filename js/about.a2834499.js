(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["about"],{f820:function(e,t,a){"use strict";a.r(t);var r=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},i=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"about"},[a("h1",[e._v("About Spectable")]),a("p",[e._v("Spectable is a "),a("abbr",{attrs:{title:"Proof of Concept"}},[e._v("PoC")]),e._v(" based on the idea of capturing and displaying "),a("abbr",{attrs:{title:"Service Level Indicator"}},[e._v("SLIs")]),e._v(", "),a("abbr",{attrs:{title:"Service Level Objective"}},[e._v("SLOs")]),e._v(", "),a("abbr",{attrs:{title:"Service Level Agreement"}},[e._v("SLAs")]),e._v(" and bringing them closer to the business value.")]),a("p",[e._v("It's based on mashing together two ideas; "),a("a",{attrs:{href:"https://blog.acolyer.org/2019/07/05/automating-chaos-experiments-in-production/"}},[e._v("Netflix's Monocle dashboard")]),e._v(", (except it isn't automated to any actual chaos engineering tests) and the product management idea of \""),a("a",{attrs:{href:"https://web.archive.org/web/20160420201131/http://www.userfocus.co.uk/articles/prioritising-functions.html"}},[e._v("Red Routes")]),e._v('".')]),a("p",[e._v("Norah Jones mentions in her great talk "),a("a",{attrs:{href:"https://www.infoq.com/presentations/rethinking-chaos-engineering/"}},[e._v("Rethinking Chaos Engineering")]),e._v(", the value of the dashboard was in giving teams visablity to their own assumptions, downstream impacts, etc. I thought that was worth exploring by adding in a layer of business value to it (e.g. how many users rely on this service and how often).")]),a("p",[e._v("After I had done that, I had another idea - why not add the metrics from "),a("a",{attrs:{href:"https://www.amazon.com/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339"}},[e._v("Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations")]),e._v(". In an ideal world you could get your Repo + CI/CD pipeline to calculate these results. But hey, ¯\\_(ツ)_/¯ PoC.")]),a("h3",[a("abbr",{attrs:{title:"Service Level Indicator"}},[e._v("SLIs")]),e._v(", "),a("abbr",{attrs:{title:"Service Level Objective"}},[e._v("SLOs")]),e._v(", "),a("abbr",{attrs:{title:"Service Level Agreement"}},[e._v("SLAs")]),e._v("? I'm sorry a what?")]),a("p",[e._v("When building a service, we have a should define some baseline agreements as to the service’s expected uptime and performance based on their business value.")]),a("dl",[a("dt",[e._v("Service Level Indicator ("),a("abbr",{attrs:{title:"Service Level Indicator"}},[e._v("SLIs")]),e._v(")")]),a("dd",[e._v("What the service owner has chosen to measure progress towards their goal.")]),a("dt",[e._v("Service Level Objective ("),a("abbr",{attrs:{title:"Service Level Objective"}},[e._v("SLOs")]),e._v(")")]),a("dd",[e._v("What the service owner’s goal is for the given indicator.")]),a("dt",[e._v("Service Level Agreement ("),a("abbr",{attrs:{title:"Service Level Agreement"}},[e._v("SLAs")]),e._v(")")]),a("dd",[e._v("What the service owner is promising its users (typically the "),a("abbr",{attrs:{title:"Service Level Objective"}},[e._v("SLOs")]),e._v(" + wiggle room).")])]),a("h4",[e._v("Example")]),a("ul",[a("li",[a("strong",[e._v("Indicator")]),e._v(": request latency.")]),a("li",[a("strong",[e._v("Objective")]),e._v(": 99.5% of requests will be completed in 5ms.")]),a("li",[a("strong",[e._v("Agreement")]),e._v(": 99% of requests complete in 5ms or you get a refund.")])])])}],s=a("2877"),n={},o=Object(s["a"])(n,r,i,!1,null,null,null);t["default"]=o.exports}}]);
//# sourceMappingURL=about.a2834499.js.map